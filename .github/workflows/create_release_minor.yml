name: create_release_minor_
# release version is patch v0.1.0

on:
  pull_request:
    types: [closed]

jobs:
  create_release_minor:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'create release minor') && github.event.pull_request.user.login == 'jge162'
    steps:
      - name: Python Action
        uses: jge162/Action-workflows@1.0.1
      - name: Get latest tag
        id: get_latest_tag
        run: |
          git fetch --tags
          echo "${{ steps.get_latest_tag.outputs.latest_tag }}" > latest_tag.txt
      - name: Bump minor version
        id: bump_version
        run: |
          semver=$(cat latest_tag.txt)
          major=$(echo $semver | cut -d'.' -f1)
          minor=$(echo $semver | cut -d'.' -f2)
          patch=$(echo $semver | cut -d'.' -f3)
          new_minor=$((minor+1))
          new_tag="$major.$new_minor.$patch"
          echo "$new_tag" > new_tag.txt
      - name: create-release-on-close
        uses: jge162/create-release@v1.1.1
        with:
          files: |
            build/*
          tag_name: ${{ env.NEW_TAG }}
          prerelease: Release ${{ env.NEW_TAG }}
          body: This is a new release ${{ env.NEW_TAG }} which will include bug fixes and minor updates.
        env:
          GITHUB_TOKEN: ${{ secrets.WORKFLOW_SECRET }}
          NEW_TAG: ${{ steps.bump_version.outputs.new_tag }}
          latest_tag: ${{ steps.get_latest_tag.outputs.latest_tag }}
      - name: Set output
        run: |
          echo "::set-secret name=NEW_TAG::$(cat
 


  ChangeLog_Enforcer:
    runs-on: ubuntu-latest
    needs: [create_release_minor]

    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: main

      - name: Get latest version
        id: get_latest_version
        run: |
          git fetch --tags
          latest_tag=$(git describe --tags $(git rev-list --tags --max-count=1))
          latest_version=${latest_tag#v}
          echo "::set-output name=latest_version::$latest_version"
        shell: bash

      - name: Get pull request number
        id: get_pull_request_number
        run: echo "::set-output name=pull_request_number::${{ github.event.number }}"

      - name: Update Changelog
        uses: stefanzweifel/changelog-updater-action@v1
        with:
          path-to-changelog: CHANGELOG.md
          latest-version: ${{ steps.get_latest_version.outputs.latest_version }}
          release-notes: |
            Pull request number for the release is: [#${{ steps.get_pull_request_number.outputs.pull_request_number }}](${{ github.event.pull_request.html_url }})
      - name: Commit updated CHANGELOG
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          branch: main
          commit_message: Update CHANGELOG
          file_pattern: CHANGELOG.md
